<?xml version="1.0" encoding="UTF-8"?>
<project name="apatar_trunk" default="build" basedir=".">
    <property file="build.properties"/>
    <property name="build.all" value="${dist}/tmp"/>
    <taskdef name="nsis" classname="net.sf.nsisant.Task">
        <classpath location="${general.lib}/nsisant-1.2.jar"/>
    </taskdef>
    <target name="clean">
        <delete dir="${dist}" failonerror="false"/>
    </target>
    <target name="init" depends="clean">
        <mkdir dir="${dist}"/>
        <mkdir dir="${build.all}"/>
    </target>
    <target name="build" depends="init">
        <mkdir dir="${dist}"/>
        <copy todir="${dist}">
            <fileset dir="${source}">
                <include name="*.bat"/>
                <include name="*.sh"/>
                <include name="*.properties"/>
                <include name="*.ico"/>
                <include name="*.txt"/>
                <include name="Service.svc.xml.wsdl.xml.xml"/>
                <include name="wsit-client.xml"/>
                <exclude name="*_output*.txt"/>
                <exclude name="refactoring_history.txt"/>
                <exclude name="build*.properties"/>
            </fileset>
        </copy>
        <copy todir="${dist}/lib">
            <fileset dir="${source}/lib"/>
        </copy>
        <copy todir="${dist}/${plugins}">
            <fileset dir="${source}/${plugins}">
                <exclude name="**/src/**"/>
                <exclude name="**/*compiere*/**"/>
            </fileset>
        </copy>
        <delete dir="${dist}/${plugins}/connectors/db2/lib/license"/>
        <delete file="${dist}/${plugins}/connectors/db2/lib/db2jcc_license_cu.jar"/>
        <delete dir="${dist}/${plugins}/connectors/compiere/"/>
        <delete file="${dist}/${plugins}/core/functions/bin/com/apatar/functions/String/ParseGoldMineNotesFunction.class"/>
        <mkdir dir="${dist}/${plugins}/connectors/db2/lib/license"/>
        <mkdir dir="${dist}/logs"/>
        <delete dir="${build.all}" failonerror="false"/>
    </target>
    <target name="prepareWindowsFiles" depends="build">
        <move file="${dist}/${plugins}/core/core/lib/jdic_stub_win.jar" tofile="${dist}/${plugins}/core/core/lib/jdic_stub.jar"/>
        <delete file="${dist}/${plugins}/core/core/lib/jdic_stub_linux.jar"/>
    </target>
    <target name="prepareLinuxFiles" depends="build">
        <move file="${dist}/${plugins}/core/core/lib/jdic_stub_linux.jar" tofile="${dist}/${plugins}/core/core/lib/jdic_stub.jar"/>
        <delete file="${dist}/${plugins}/core/core/lib/jdic_stub_win.jar"/>
        <delete file="${dist}/boot1.properties"/>
        <delete file="${dist}/boot1noApex.properties"/>
        <copy file="${source}/boot1.properties_linux" tofile="${dist}/boot1.properties"/>
        <copy file="${source}/boot1noApex.properties_linux" tofile="${dist}/boot1noApex.properties"/>
        <delete dir="${dist}/${plugins}/connectors/centriccrm/"/>
        <delete dir="${dist}/${plugins}/connectors/eloqua/"/>
        <delete dir="${dist}/${plugins}/connectors/textfile2/"/>
        <chmod file="${dist}/application.sh" perm="700"/>
        <chmod file="${dist}/application_noApex.sh" perm="700"/>
        <chmod file="${dist}/scheduling.sh" perm="700"/>
    </target>
    <target name="makeWindowsInstaller" depends="prepareWindowsFiles">
        <nsis script="install.nsi" path="${nsis.home}"/>
    </target>
    <target name="makeLinuxBuild" depends="prepareLinuxFiles">
        <tar destfile="${basebuilddir}/apatar.tar" basedir="${dist}"/>
        <gzip destfile="${basebuilddir}/apatar.tar.gz" src="${basebuilddir}/apatar.tar"/>
        <delete file="${basebuilddir}/apatar.tar"/>
    </target>
</project>
