<?xml version="1.0" ?>
<!DOCTYPE plugin PUBLIC "-//JPF//Java Plug-in Manifest 1.0" "http://jpf.sourceforge.net/plugin_1_0.dtd">
<plugin id="com.apatar.functions" version="0.0.1">
	<requires>
		<import plugin-id="com.apatar.core"/>
		<import plugin-id="com.apatar.ui"/>
		<import plugin-id="com.apatar.thirdparty"/>
	</requires>
	<runtime>
		<library id="function" path="bin/" type="code">
	        <export prefix="*"/>
	    </library>
	</runtime>

	<extension plugin-id="com.apatar.core" point-id="Node" id="NodeFunction">
		<parameter id="class" value="com.apatar.functions.FunctionNodeFactory"/>
	</extension>
	<extension plugin-id="com.apatar.core" point-id="Node" id="NodeConstantFunction">
		<parameter id="class" value="com.apatar.functions.ConstantFunctionNodeFactory"/>
	</extension>
	<extension plugin-id="com.apatar.core" point-id="Node" id="ReplaceIfNodeFunction">
		<parameter id="class" value="com.apatar.functions.ReplaceIfFunctionNodeFactory"/>
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlIP">
		<parameter id="classFunction" value="com.apatar.functions.Logic.IsIpValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlEmail">
		<parameter id="classFunction" value="com.apatar.functions.Logic.IsEmailValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlUrl">
		<parameter id="classFunction" value="com.apatar.functions.Logic.IsUrlValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlIsValidCreditCard">
		<parameter id="classFunction" value="com.apatar.functions.Logic.IsCreditNumberValidateFunction" />
	</extension>

	<!-- Data -->

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlAnd">
		<parameter id="classFunction" value="com.apatar.functions.Logic.AndValidateFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlOr">
		<parameter id="classFunction" value="com.apatar.functions.Logic.OrValidateFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlIsNull">
		<parameter id="classFunction" value="com.apatar.functions.Logic.IsNullValidateFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlIsNotNull">
		<parameter id="classFunction" value="com.apatar.functions.Logic.IsNotNullValidateFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlNot">
		<parameter id="classFunction" value="com.apatar.functions.Logic.NotValidateFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlEmpty">
		<parameter id="classFunction" value="com.apatar.functions.Logic.IsEmptyValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlNotEmpty">
		<parameter id="classFunction" value="com.apatar.functions.Logic.IsNotEmptyValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlBegins">
		<parameter id="classFunction" value="com.apatar.functions.Logic.BeginsWithValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlContain">
		<parameter id="classFunction" value="com.apatar.functions.Logic.ContainValidateFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlLike">
		<parameter id="classFunction" value="com.apatar.functions.Logic.LikeValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlDoesNotContain">
		<parameter id="classFunction" value="com.apatar.functions.Logic.DoesNotContainValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlEnds">
		<parameter id="classFunction" value="com.apatar.functions.Logic.EndsWithValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlEqual">
		<parameter id="classFunction" value="com.apatar.functions.Logic.EqualValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlEqualTo">
		<parameter id="classFunction" value="com.apatar.functions.Logic.EqualToValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlGreaterOrEqual">
		<parameter id="classFunction" value="com.apatar.functions.Logic.GreaterOrEqualValidateFunction" />
	</extension>


	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlGreater">
		<parameter id="classFunction" value="com.apatar.functions.Logic.GreaterThanValidateFunction" />
	</extension>


	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlLessOrEqual">
		<parameter id="classFunction" value="com.apatar.functions.Logic.LessOrEqualValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlLess">
		<parameter id="classFunction" value="com.apatar.functions.Logic.LessThanValidateFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="vlFindRegExp">
		<parameter id="classFunction" value="com.apatar.functions.Logic.FindRegExpFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryBoolean">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToBooleanTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactorySingle">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToSingleTransformFunction" />

	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryDecimal">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToDecimalTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryDouble">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToDoubleTransformFunction" />

	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryInt16">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToInt16TransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryInt32">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToInt32TransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryInt64">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToInt64TransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryString">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToStringTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryTime">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToTimeTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryDate">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToDateTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryClob">
		<parameter id="classFunction" value="com.apatar.functions.String.data.ToClobTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryLookUp">
		<parameter id="classFunction" value="com.apatar.functions.String.data.LookUpTransformFunction" />
	</extension>

<!-- Math functions -->

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactorySumm">
		<parameter id="classFunction" value="com.apatar.functions.math.SummTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryMultipleSort">
		<parameter id="classFunction" value="com.apatar.functions.math.MultipleSortFunction" />
	</extension>

<!-- DateTime functions -->
    <extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryAddTimeZone">
        <parameter id="classFunction" value="com.apatar.functions.datetime.AddTimeZoneFunction" />
    </extension>


<!-- String functions -->
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryAppend">
		<parameter id="classFunction" value="com.apatar.functions.String.AppendTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryRegExp">
		<parameter id="classFunction" value="com.apatar.functions.String.RegExpFunction" />
	</extension>

	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryConcatenate">
		<parameter id="classFunction" value="com.apatar.functions.String.ConcatenateTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryMiddle">
		<parameter id="classFunction" value="com.apatar.functions.String.MiddleTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryLeftTrim">
		<parameter id="classFunction" value="com.apatar.functions.String.LeftTrimTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryRightTrim">
		<parameter id="classFunction" value="com.apatar.functions.String.RightTrimTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryTrim">
		<parameter id="classFunction" value="com.apatar.functions.String.TrimTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryLength">
		<parameter id="classFunction" value="com.apatar.functions.String.LengthTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryLowerCase">
		<parameter id="classFunction" value="com.apatar.functions.String.LowerCaseTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryUpperCase">
		<parameter id="classFunction" value="com.apatar.functions.String.UpperCaseTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryProperCase">
		<parameter id="classFunction" value="com.apatar.functions.String.ProperCaseTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactorySentenceCase">
		<parameter id="classFunction" value="com.apatar.functions.String.SentenceCaseTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryRemove">
		<parameter id="classFunction" value="com.apatar.functions.String.RemoveTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryReplace">
		<parameter id="classFunction" value="com.apatar.functions.String.ReplaceTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryPadLeft">
		<parameter id="classFunction" value="com.apatar.functions.String.PadLeftTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryPadRight">
		<parameter id="classFunction" value="com.apatar.functions.String.PadRightTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryPrefix">
		<parameter id="classFunction" value="com.apatar.functions.String.PrefixTransformFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryClearHtmlTransformFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.ClearHtmlTransformFunction" />
	</extension>
	<!-- New GroupBy -->
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryAvgFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.AvgFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryCountFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.CountFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryCountStarFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.CountStarFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryCountDistinctFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.CountDistinctFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryMaxFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.MaxFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryMinFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.MinFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactorySumFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.SumFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryHavingFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.HavingFunction" />
	</extension>
	<!-- New GroupBy-->
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryAscFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.AscFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryDescFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.DescFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryCropRightTransformFunction">
		<parameter id="classFunction" value="com.apatar.functions.String.CropRightTransformFunction" />
	</extension>
    <extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryParseEmailBodyTransformFunction">
        <parameter id="classFunction" value="com.apatar.functions.String.ParseEmailBodyTransformFunction" />
    </extension>
 <!--    <extension plugin-id="com.apatar.core" point-id="functionFactory" id="functionFactoryParseGoldMineNotesFunction">
        <parameter id="classFunction" value="com.apatar.functions.String.ParseGoldMineNotesFunction" />
    </extension>-->

<!-- Constant -->

	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstDate">
		<parameter id="classFunction" value="com.apatar.functions.constant.DateFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryText">
		<parameter id="classFunction" value="com.apatar.functions.constant.TextFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstBoolean">
		<parameter id="classFunction" value="com.apatar.functions.constant.BooleanFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstGenerateUUID">
		<parameter id="classFunction" value="com.apatar.functions.constant.GenerateUUIDFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstNumeric">
		<parameter id="classFunction" value="com.apatar.functions.constant.NumericFunction" />
	</extension>
	
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstLimit">
		<parameter id="classFunction" value="com.apatar.functions.constant.LimitFunction" />
	</extension>
	
	<!--extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstDateTime">
		<parameter id="classFunction" value="com.apatar.functions.constant.DateTimeFunction" />
	</extension-->
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstDecimal">
		<parameter id="classFunction" value="com.apatar.functions.constant.DecimalFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstTime">
		<parameter id="classFunction" value="com.apatar.functions.constant.TimeFunction" />
	</extension>
	
	<!-- Gia MapReduce apo -->
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryJarPath">
		<parameter id="classFunction" value="com.apatar.functions.constant.JarPathFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryMRConfPath">
		<parameter id="classFunction" value="com.apatar.functions.constant.MRConfPathFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryMapper">
		<parameter id="classFunction" value="com.apatar.functions.constant.MapperFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryReducer">
		<parameter id="classFunction" value="com.apatar.functions.constant.ReducerFunction" />
	</extension>
	<!-- Gia MapReduce ews-->
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstFile">
		<parameter id="classFunction" value="com.apatar.functions.constant.FileFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstCurrentDate">
		<parameter id="classFunction" value="com.apatar.functions.constant.CurrentDateFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="functionConstFactory" id="functionFactoryConstCurrentTimestamp">
		<parameter id="classFunction" value="com.apatar.functions.constant.CurrentTimestampFunction" />
	</extension>
	<extension plugin-id="com.apatar.core" point-id="otherFunctionFactory" id="replaceIfFunctionFactory">
		<parameter id="classNode" value="com.apatar.functions.ReplaceIfFunctionNodeFactory"/>
		<parameter id="classFunction" value="com.apatar.functions.String.ReplaceIfTransformFunction" />
	</extension>


</plugin>